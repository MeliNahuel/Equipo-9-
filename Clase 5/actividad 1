import java.util.*;

class Usuario {
    private String nombre;
    private String id;

    public Usuario(String id, String nombre) {
        this.id = id;
        this.nombre = nombre;
    }

    public String getId() {
        return id;
    }

    public String getNombre() {
        return nombre;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Usuario usuario = (Usuario) obj;
        return Objects.equals(id, usuario.id); // Comparar por ID
    }

    @Override
    public int hashCode() {
        return Objects.hash(id); // Usar ID en el hashCode
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Nombre: " + nombre;
    }
}

class RedSocial {
    private Map<Usuario, List<Usuario>> seguidores;

    public RedSocial() {
        seguidores = new HashMap<>();
    }

    public void agregarUsuario(String id, String nombre) {
        Usuario usuario = new Usuario(id, nombre);
        if (!seguidores.containsKey(usuario)) {
            seguidores.put(usuario, new ArrayList<>());
        } else {
            System.out.println("El usuario ya existe.");
        }
    }

    public void seguir(String idSeguidor, String idSeguido) {
        Usuario uSeguidor = buscarUsuarioPorId(idSeguidor);
        Usuario uSeguido = buscarUsuarioPorId(idSeguido);

        if (uSeguidor != null && uSeguido != null) {
            List<Usuario> listaSeguidos = seguidores.get(uSeguidor);
            if (!listaSeguidos.contains(uSeguido)) {
                listaSeguidos.add(uSeguido);
                System.out.println(uSeguidor.getNombre() + " ahora sigue a " + uSeguido.getNombre());
            } else {
                System.out.println(uSeguidor.getNombre() + " ya sigue a " + uSeguido.getNombre());
            }
        } else {
            System.out.println("Uno de los usuarios no existe.");
        }
    }

    public void dejarDeSeguir(String idSeguidor, String idSeguido) {
        Usuario uSeguidor = buscarUsuarioPorId(idSeguidor);
        Usuario uSeguido = buscarUsuarioPorId(idSeguido);

        if (uSeguidor != null && uSeguido != null) {
            List<Usuario> listaSeguidos = seguidores.get(uSeguidor);
            if (listaSeguidos.contains(uSeguido)) {
                listaSeguidos.remove(uSeguido);
                System.out.println(uSeguidor.getNombre() + " ha dejado de seguir a " + uSeguido.getNombre());
            } else {
                System.out.println(uSeguidor.getNombre() + " no sigue a " + uSeguido.getNombre());
            }
        } else {
            System.out.println("Uno de los usuarios no existe.");
        }
    }

    public void listaDeSeguidos(String idUsuario) {
        Usuario u = buscarUsuarioPorId(idUsuario);
        if (u != null) {
            System.out.println(u.getNombre() + " sigue a: " + seguidores.get(u));
        } else {
            System.out.println("El usuario no existe.");
        }
    }

    public void listaDeSeguidores(String idUsuario) {
        Usuario u = buscarUsuarioPorId(idUsuario);
        List<Usuario> listaSeguidores = new ArrayList<>();

        for (Map.Entry<Usuario, List<Usuario>> entry : seguidores.entrySet()) {
            if (entry.getValue().contains(u)) {
                listaSeguidores.add(entry.getKey());
            }
        }

        System.out.println(u.getNombre() + " es seguido por: " + listaSeguidores);
    }

    private Usuario buscarUsuarioPorId(String id) {
        for (Usuario usuario : seguidores.keySet()) {
            if (usuario.getId().equals(id)) {
                return usuario;
            }
        }
        return null;
    }
}

public class Main {
    public static void main(String[] args) {
        RedSocial redSocial = new RedSocial();

        // Agregar usuarios con ID y nombre
        redSocial.agregarUsuario("1", "A");
        redSocial.agregarUsuario("2", "B");
        redSocial.agregarUsuario("3", "C");
        redSocial.agregarUsuario("4", "D");

        // Establecer relaciones de seguidores usando ID
        redSocial.seguir("1", "2");
        redSocial.seguir("1", "3");
        redSocial.seguir("2", "4");
        redSocial.seguir("3", "4");

        // Consultar listas de seguidos
        redSocial.listaDeSeguidos("1");
        redSocial.listaDeSeguidos("2");

        // Consultar listas de seguidores
        redSocial.listaDeSeguidores("4");

        // Dejar de seguir
        redSocial.dejarDeSeguir("1", "3");
        redSocial.listaDeSeguidos("1");
    }
}
