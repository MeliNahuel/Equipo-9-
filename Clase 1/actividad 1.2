Actividad 1.2



import java.math.BigInteger;

public class Ejecucion {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BigInteger numeroBI = new BigInteger("70");
        BigInteger resultadoBI = factorialBI(numeroBI);
        System.out.println("*Utilizacion de BigInteger*");
        System.out.println("El factorial del numero " + numeroBI + " es " + resultadoBI);
        System.out.println("");
        long numeroL = 20;
        long resultadoL = factorialL(numeroL);
        System.out.println("*Utilizacion de long*");
        System.out.println("El factorial del numero " + numeroL + " es " + resultadoL);
	}
	public static BigInteger factorialBI(BigInteger n) {
		if (n == BigInteger.ZERO) {
            return BigInteger.ONE;
            } else {
            return n.multiply(factorialBI(n.subtract(BigInteger.ONE)));
        }
    }
	public static long factorialL(long n) {
        if (n == 0) {
            return 1;
        } else {
            return n * factorialL(n - 1);
        }
    }
}

/// Tipo de Dato longEl tipo de dato long en Java es un entero con complemento a dos de 64 bits. 
Tiene un valor mínimo de -2^63 y un valor máximo de 2^63-1. 
Se usa cuando necesitas un rango de valores más amplio que el proporcionado por el tipo int.Clase BigIntegerBigInteger es una clase en Java que permite manejar enteros muy grandes que están fuera del rango de los tipos de datos primitivos como int y long. 
Proporciona métodos para operaciones aritméticas, cálculo de MCD, generación de números primos, manipulación de bits, y más.
